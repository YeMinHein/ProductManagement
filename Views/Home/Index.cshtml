@using ProductManagement.ViewModel
@model ProductListViewModel

@{
    ViewData["Title"] = "Home Page";
}

<section class="content">

    <div class="container-fluid">

        <div class="card">

            <div class="card-header">

                <h3 class="card-title">Product List</h3>

            </div>

            <div class="card-body">

                <table class="table table-bordered">

                    <thead>
                        <tr>
                            <th>SN</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Price</th>
                            <th>Created Date</th>
                        </tr>
                    </thead>

                    <tbody>
                        @{
                            int sn = (Model.CurrentPage - 1) * Model.PageSize + 1;
                        }
                        @foreach (var item in Model.Products)
                        {
                            <tr>
                                <td>@(sn++)</td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                                <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                              
                            </tr>
                        }
                    </tbody>

                </table>

            </div>

            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
                    </li>
                </ul>
            </nav>
        </div>

    </div>

</section>



